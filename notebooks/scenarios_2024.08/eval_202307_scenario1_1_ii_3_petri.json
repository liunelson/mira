{
 "header": {
  "name": "Evaluation Scenario 1. Part 1 (ii) Masking type 3",
  "schema": "https://raw.githubusercontent.com/DARPA-ASKEM/Model-Representations/petrinet_v0.6/petrinet/petrinet_schema.json",
  "schema_name": "petrinet",
  "description": "Evaluation Scenario 1. Part 1 (ii) Masking type 3",
  "model_version": "0.1"
 },
 "properties": {},
 "model": {
  "states": [
   {
    "id": "S_noncompliant",
    "name": "S_noncompliant",
    "grounding": {
     "identifiers": {
      "ido": "0000514"
     },
     "modifiers": {
      "masking": "noncompliant"
     }
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "I_noncompliant",
    "name": "I_noncompliant",
    "grounding": {
     "identifiers": {
      "ido": "0000511"
     },
     "modifiers": {
      "masking": "noncompliant"
     }
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "E_noncompliant",
    "name": "E_noncompliant",
    "grounding": {
     "identifiers": {
      "apollosv": "0000154"
     },
     "modifiers": {
      "masking": "noncompliant"
     }
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "I_compliant",
    "name": "I_compliant",
    "grounding": {
     "identifiers": {
      "ido": "0000511"
     },
     "modifiers": {
      "masking": "compliant"
     }
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "S_compliant",
    "name": "S_compliant",
    "grounding": {
     "identifiers": {
      "ido": "0000514"
     },
     "modifiers": {
      "masking": "compliant"
     }
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "E_compliant",
    "name": "E_compliant",
    "grounding": {
     "identifiers": {
      "apollosv": "0000154"
     },
     "modifiers": {
      "masking": "compliant"
     }
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "R",
    "name": "R",
    "grounding": {
     "identifiers": {
      "ido": "0000592"
     },
     "modifiers": {}
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "H",
    "name": "H",
    "grounding": {
     "identifiers": {
      "ido": "0000511"
     },
     "modifiers": {
      "property": "ncit:C25179"
     }
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   },
   {
    "id": "D",
    "name": "D",
    "grounding": {
     "identifiers": {
      "ncit": "C28554"
     },
     "modifiers": {}
    },
    "units": {
     "expression": "person",
     "expression_mathml": "<ci>person</ci>"
    }
   }
  ],
  "transitions": [
   {
    "id": "t_noncompliant_noncompliant",
    "input": [
     "I_noncompliant",
     "S_noncompliant"
    ],
    "output": [
     "I_noncompliant",
     "E_noncompliant"
    ],
    "properties": {
     "name": "t_noncompliant_noncompliant"
    }
   },
   {
    "id": "t_noncompliant_compliant",
    "input": [
     "I_compliant",
     "S_noncompliant"
    ],
    "output": [
     "I_compliant",
     "E_noncompliant"
    ],
    "properties": {
     "name": "t_noncompliant_compliant"
    }
   },
   {
    "id": "t_compliant_noncompliant",
    "input": [
     "I_noncompliant",
     "S_compliant"
    ],
    "output": [
     "I_noncompliant",
     "E_compliant"
    ],
    "properties": {
     "name": "t_compliant_noncompliant"
    }
   },
   {
    "id": "t_compliant_compliant",
    "input": [
     "I_compliant",
     "S_compliant"
    ],
    "output": [
     "I_compliant",
     "E_compliant"
    ],
    "properties": {
     "name": "t_compliant_compliant"
    }
   },
   {
    "id": "t_noncompliant",
    "input": [
     "E_noncompliant"
    ],
    "output": [
     "I_noncompliant"
    ],
    "properties": {
     "name": "t_noncompliant"
    }
   },
   {
    "id": "t_compliant",
    "input": [
     "E_compliant"
    ],
    "output": [
     "I_compliant"
    ],
    "properties": {
     "name": "t_compliant"
    }
   },
   {
    "id": "t_noncompliant",
    "input": [
     "I_noncompliant"
    ],
    "output": [
     "R"
    ],
    "properties": {
     "name": "t_noncompliant"
    }
   },
   {
    "id": "t_compliant",
    "input": [
     "I_compliant"
    ],
    "output": [
     "R"
    ],
    "properties": {
     "name": "t_compliant"
    }
   },
   {
    "id": "t_noncompliant",
    "input": [
     "I_noncompliant"
    ],
    "output": [
     "H"
    ],
    "properties": {
     "name": "t_noncompliant"
    }
   },
   {
    "id": "t_compliant",
    "input": [
     "I_compliant"
    ],
    "output": [
     "H"
    ],
    "properties": {
     "name": "t_compliant"
    }
   },
   {
    "id": "t11",
    "input": [
     "H"
    ],
    "output": [
     "R"
    ],
    "properties": {
     "name": "t11"
    }
   },
   {
    "id": "t12",
    "input": [
     "H"
    ],
    "output": [
     "D"
    ],
    "properties": {
     "name": "t12"
    }
   },
   {
    "id": "t_conv_0_noncompliant_compliant",
    "input": [
     "S_noncompliant"
    ],
    "output": [
     "S_compliant"
    ],
    "properties": {
     "name": "t_conv_0_noncompliant_compliant"
    }
   },
   {
    "id": "t_conv_0_compliant_noncompliant",
    "input": [
     "S_compliant"
    ],
    "output": [
     "S_noncompliant"
    ],
    "properties": {
     "name": "t_conv_0_compliant_noncompliant"
    }
   },
   {
    "id": "t_conv_1_noncompliant_compliant",
    "input": [
     "E_noncompliant"
    ],
    "output": [
     "E_compliant"
    ],
    "properties": {
     "name": "t_conv_1_noncompliant_compliant"
    }
   },
   {
    "id": "t_conv_1_compliant_noncompliant",
    "input": [
     "E_compliant"
    ],
    "output": [
     "E_noncompliant"
    ],
    "properties": {
     "name": "t_conv_1_compliant_noncompliant"
    }
   },
   {
    "id": "t_conv_2_noncompliant_compliant",
    "input": [
     "I_noncompliant"
    ],
    "output": [
     "I_compliant"
    ],
    "properties": {
     "name": "t_conv_2_noncompliant_compliant"
    }
   },
   {
    "id": "t_conv_2_compliant_noncompliant",
    "input": [
     "I_compliant"
    ],
    "output": [
     "I_noncompliant"
    ],
    "properties": {
     "name": "t_conv_2_compliant_noncompliant"
    }
   }
  ]
 },
 "semantics": {
  "ode": {
   "rates": [
    {
     "target": "t_noncompliant_noncompliant",
     "expression": "I_noncompliant*S_noncompliant*beta*(-c_m_0_0*eps_m_0_0 + 1)/N",
     "expression_mathml": "<apply><divide/><apply><times/><ci>I_noncompliant</ci><ci>S_noncompliant</ci><ci>beta</ci><apply><plus/><apply><minus/><apply><times/><ci>c_m_0_0</ci><ci>eps_m_0_0</ci></apply></apply><cn>1</cn></apply></apply><ci>N</ci></apply>"
    },
    {
     "target": "t_noncompliant_compliant",
     "expression": "I_compliant*S_noncompliant*beta*(-c_m_0_1*eps_m_0_1 + 1)/N",
     "expression_mathml": "<apply><divide/><apply><times/><ci>I_compliant</ci><ci>S_noncompliant</ci><ci>beta</ci><apply><plus/><apply><minus/><apply><times/><ci>c_m_0_1</ci><ci>eps_m_0_1</ci></apply></apply><cn>1</cn></apply></apply><ci>N</ci></apply>"
    },
    {
     "target": "t_compliant_noncompliant",
     "expression": "I_noncompliant*S_compliant*beta*(-c_m_1_0*eps_m_1_0 + 1)/N",
     "expression_mathml": "<apply><divide/><apply><times/><ci>I_noncompliant</ci><ci>S_compliant</ci><ci>beta</ci><apply><plus/><apply><minus/><apply><times/><ci>c_m_1_0</ci><ci>eps_m_1_0</ci></apply></apply><cn>1</cn></apply></apply><ci>N</ci></apply>"
    },
    {
     "target": "t_compliant_compliant",
     "expression": "I_compliant*S_compliant*beta*(-c_m_1_1*eps_m_1_1 + 1)/N",
     "expression_mathml": "<apply><divide/><apply><times/><ci>I_compliant</ci><ci>S_compliant</ci><ci>beta</ci><apply><plus/><apply><minus/><apply><times/><ci>c_m_1_1</ci><ci>eps_m_1_1</ci></apply></apply><cn>1</cn></apply></apply><ci>N</ci></apply>"
    },
    {
     "target": "t_noncompliant",
     "expression": "E_noncompliant*r_E_to_I",
     "expression_mathml": "<apply><times/><ci>E_noncompliant</ci><ci>r_E_to_I</ci></apply>"
    },
    {
     "target": "t_compliant",
     "expression": "E_compliant*r_E_to_I",
     "expression_mathml": "<apply><times/><ci>E_compliant</ci><ci>r_E_to_I</ci></apply>"
    },
    {
     "target": "t_noncompliant",
     "expression": "I_noncompliant*p_I_to_R*r_I_to_R",
     "expression_mathml": "<apply><times/><ci>I_noncompliant</ci><ci>p_I_to_R</ci><ci>r_I_to_R</ci></apply>"
    },
    {
     "target": "t_compliant",
     "expression": "I_compliant*p_I_to_R*r_I_to_R",
     "expression_mathml": "<apply><times/><ci>I_compliant</ci><ci>p_I_to_R</ci><ci>r_I_to_R</ci></apply>"
    },
    {
     "target": "t_noncompliant",
     "expression": "I_noncompliant*p_I_to_H*r_I_to_H",
     "expression_mathml": "<apply><times/><ci>I_noncompliant</ci><ci>p_I_to_H</ci><ci>r_I_to_H</ci></apply>"
    },
    {
     "target": "t_compliant",
     "expression": "I_compliant*p_I_to_H*r_I_to_H",
     "expression_mathml": "<apply><times/><ci>I_compliant</ci><ci>p_I_to_H</ci><ci>r_I_to_H</ci></apply>"
    },
    {
     "target": "t11",
     "expression": "H*p_H_to_R*r_H_to_R",
     "expression_mathml": "<apply><times/><ci>H</ci><ci>p_H_to_R</ci><ci>r_H_to_R</ci></apply>"
    },
    {
     "target": "t12",
     "expression": "H*p_H_to_D*r_H_to_D",
     "expression_mathml": "<apply><times/><ci>H</ci><ci>p_H_to_D</ci><ci>r_H_to_D</ci></apply>"
    },
    {
     "target": "t_conv_0_noncompliant_compliant",
     "expression": "S_noncompliant*p_noncompliant_compliant",
     "expression_mathml": "<apply><times/><ci>S_noncompliant</ci><ci>p_noncompliant_compliant</ci></apply>"
    },
    {
     "target": "t_conv_0_compliant_noncompliant",
     "expression": "S_compliant*p_compliant_noncompliant",
     "expression_mathml": "<apply><times/><ci>S_compliant</ci><ci>p_compliant_noncompliant</ci></apply>"
    },
    {
     "target": "t_conv_1_noncompliant_compliant",
     "expression": "E_noncompliant*p_noncompliant_compliant",
     "expression_mathml": "<apply><times/><ci>E_noncompliant</ci><ci>p_noncompliant_compliant</ci></apply>"
    },
    {
     "target": "t_conv_1_compliant_noncompliant",
     "expression": "E_compliant*p_compliant_noncompliant",
     "expression_mathml": "<apply><times/><ci>E_compliant</ci><ci>p_compliant_noncompliant</ci></apply>"
    },
    {
     "target": "t_conv_2_noncompliant_compliant",
     "expression": "I_noncompliant*p_noncompliant_compliant",
     "expression_mathml": "<apply><times/><ci>I_noncompliant</ci><ci>p_noncompliant_compliant</ci></apply>"
    },
    {
     "target": "t_conv_2_compliant_noncompliant",
     "expression": "I_compliant*p_compliant_noncompliant",
     "expression_mathml": "<apply><times/><ci>I_compliant</ci><ci>p_compliant_noncompliant</ci></apply>"
    }
   ],
   "initials": [
    {
     "target": "S_noncompliant",
     "expression": "19339995/2",
     "expression_mathml": "<apply><divide/><cn>19339995</cn><cn>2</cn></apply>"
    },
    {
     "target": "I_noncompliant",
     "expression": "2",
     "expression_mathml": "<cn>2</cn>"
    },
    {
     "target": "E_noncompliant",
     "expression": "1/2",
     "expression_mathml": "<apply><divide/><cn>1</cn><cn>2</cn></apply>"
    },
    {
     "target": "I_compliant",
     "expression": "2",
     "expression_mathml": "<cn>2</cn>"
    },
    {
     "target": "S_compliant",
     "expression": "19339995/2",
     "expression_mathml": "<apply><divide/><cn>19339995</cn><cn>2</cn></apply>"
    },
    {
     "target": "E_compliant",
     "expression": "1/2",
     "expression_mathml": "<apply><divide/><cn>1</cn><cn>2</cn></apply>"
    },
    {
     "target": "R",
     "expression": "0.0",
     "expression_mathml": "<cn>0.0</cn>"
    },
    {
     "target": "H",
     "expression": "0.0",
     "expression_mathml": "<cn>0.0</cn>"
    },
    {
     "target": "D",
     "expression": "0.0",
     "expression_mathml": "<cn>0.0</cn>"
    }
   ],
   "parameters": [
    {
     "id": "N",
     "value": 19340000.0,
     "units": {
      "expression": "person",
      "expression_mathml": "<ci>person</ci>"
     }
    },
    {
     "id": "beta",
     "value": 0.4,
     "units": {
      "expression": "1/(day*person)",
      "expression_mathml": "<apply><divide/><cn>1</cn><apply><times/><ci>day</ci><ci>person</ci></apply></apply>"
     }
    },
    {
     "id": "c_m_0_0",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "eps_m_0_0",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "c_m_0_1",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "eps_m_0_1",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "c_m_1_0",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "eps_m_1_0",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "c_m_1_1",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "eps_m_1_1",
     "value": 0.5,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "r_E_to_I",
     "value": 0.2,
     "units": {
      "expression": "1/day",
      "expression_mathml": "<apply><power/><ci>day</ci><cn>-1</cn></apply>"
     }
    },
    {
     "id": "p_I_to_R",
     "value": 0.8,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "r_I_to_R",
     "value": 0.07,
     "units": {
      "expression": "1/day",
      "expression_mathml": "<apply><power/><ci>day</ci><cn>-1</cn></apply>"
     }
    },
    {
     "id": "p_I_to_H",
     "value": 0.2,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "r_I_to_H",
     "value": 0.1,
     "units": {
      "expression": "1/day",
      "expression_mathml": "<apply><power/><ci>day</ci><cn>-1</cn></apply>"
     }
    },
    {
     "id": "p_H_to_R",
     "value": 0.88,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "r_H_to_R",
     "value": 0.1,
     "units": {
      "expression": "1/day",
      "expression_mathml": "<apply><power/><ci>day</ci><cn>-1</cn></apply>"
     }
    },
    {
     "id": "p_H_to_D",
     "value": 0.12,
     "units": {
      "expression": "1",
      "expression_mathml": "<cn>1</cn>"
     }
    },
    {
     "id": "r_H_to_D",
     "value": 0.1,
     "units": {
      "expression": "1/day",
      "expression_mathml": "<apply><power/><ci>day</ci><cn>-1</cn></apply>"
     }
    },
    {
     "id": "p_noncompliant_compliant",
     "value": 0.1
    },
    {
     "id": "p_compliant_noncompliant",
     "value": 0.1
    }
   ],
   "observables": [],
   "time": {
    "id": "t",
    "units": {
     "expression": "day",
     "expression_mathml": "<ci>day</ci>"
    }
   }
  }
 },
 "metadata": {
  "annotations": {
   "license": null,
   "authors": [],
   "references": [],
   "time_scale": null,
   "time_start": null,
   "time_end": null,
   "locations": [],
   "pathogens": [],
   "diseases": [],
   "hosts": [],
   "model_types": []
  }
 }
}